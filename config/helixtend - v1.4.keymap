/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 *
 * helixtend - v1.2 - fix numpad layer
 * helixtend - v1.3 - change places between numpad layer button and adjust_layer    
 * v1.3.1 - in numpad moved zero 1 key left to the space button
 * v1.4 - replace places of minus and equal/plus on main and numpad layouts
 */

/* balex version 
v1.4 add language change key instead of square bracket and move square brackets to NUMPAD layers 
v1.5 put arrows on the main layer and adjust the rest accordingly
v1.7.1 remove mod-top on C and V
*/

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/rgb.h>
 #include <dt-bindings/zmk/ext_power.h>
 #include <dt-bindings/zmk/outputs.h>

 #define DEFAULT 0
 #define LOWER  1
 #define RAISE  2
 #define ADJUST 3

#define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer


/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
    };


       keymap {
              compatible = "zmk,keymap";
              default_layer {

//	N6	N7	N8	N9	N0	EQUAL	HOME				ESC	N1	N2	N3	N4	N5
//	Y	U	I	O	P	MINUS	END				TAB	Q	W	E	R	T
//	H	J	K	L	SEMICOLON	APOSTROPHE	BACKSLASH				CAPS	A	S	D	F	G
//	N	M	COMMA	DOT	SLASH	RSHFT	UP	RIGHT_BRACKET		LA(LSHFT)	LSHFT	Z	X	C	V	B
//	DEL	SPACE	mo_tog 1 1	PSCRN	RCTRL	LEFT	DOWN	RIGHT		GRAVE	LCTRL	LWIN	LALT	mo_tog 3 3	ENTER	BACKSPACE

                     label = "Qwerty";
                     bindings = <
&kp N6	&kp N7	&kp N8	&kp N9	&kp N0	&kp EQUAL	&kp HOME				&kp ESC	&kp N1	&kp N2	&kp N3	&kp N4	&kp N5
&kp Y	&kp U	&kp I	&kp O	&kp P	&kp MINUS	&kp END				&kp TAB	&kp Q	&kp W	&kp E	&kp R	&kp T
&kp H	&kp J	&kp K	&kp L	&kp SEMICOLON	&kp APOSTROPHE	&kp BACKSLASH				&kp CAPS	&kp A	&kp S	&kp D	&kp F	&kp G
&kp N	&kp M	&kp COMMA	&kp DOT	&kp SLASH	&kp RSHFT	&kp UP	&kp RIGHT_BRACKET		&kp LA(LSHFT)	&kp LSHFT	&kp Z	&kp X	&kp C	&kp V	&kp B
&kp DEL	&kp SPACE	&mo_tog 1 1	&kp PSCRN	&kp RCTRL	&kp LEFT	&kp DOWN	&kp RIGHT		&kp GRAVE	&kp LCTRL	&kp LWIN	&kp LALT	&mo_tog 3 3	&kp ENTER	&kp BACKSPACE
                     >;
              };

              lower_layer {

//	F6	F7	F8	F9	F10	F11	F12				TRANS	F1	F2	F3	F4	F5
//					C_PLAY_PAUSE						TRANS					
//											TRANS	BT_SEL 0	BT_SEL 1	BT_SEL 2	BT_SEL 3	
//							C_VOL_UP			TRANS	TRANS	BT_CLR				
//	TRANS	TRANS	TRANS	TRANS	TRANS	C_PREV	C_VOL_DN	C_NEXT		TRANS	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS

                     label = "Func";
                     bindings = <
&kp F6	&kp F7	&kp F8	&kp F9	&kp F10	&kp F11	&kp F12				&trans	&kp F1	&kp F2	&kp F3	&kp F4	&kp F5
&none	&none	&none	&none	&kp C_PLAY_PAUSE	&none	&none				&trans	&none	&none	&none	&none	&none
&none	&none	&none	&none	&none	&none	&none				&trans	&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&none
&none	&none	&none	&none	&none	&none	&kp C_VOL_UP	&none		&trans	&trans	&bt BT_CLR	&none	&none	&none	&none
&trans	&trans	&trans	&trans	&trans	&kp C_PREV	&kp C_VOL_DN	&kp C_NEXT		&trans	&trans	&trans	&trans	&trans	&trans	&trans
                     >;
              };
              raise_layer {

//	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS				TRANS	TRANS	TRANS	TRANS	TRANS	TRANS
//	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS				TRANS	TRANS	TRANS	TRANS	TRANS	TRANS
//	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS				TRANS	TRANS	TRANS	TRANS	TRANS	TRANS
//	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS		TRANS	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS
//	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS		TRANS	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS

                    label = "Navi";
                     bindings = <
&trans	&trans	&trans	&trans	&trans	&trans	&trans				&trans	&trans	&trans	&trans	&trans	&trans
&trans	&trans	&trans	&trans	&trans	&trans	&trans				&trans	&trans	&trans	&trans	&trans	&trans
&trans	&trans	&trans	&trans	&trans	&trans	&trans				&trans	&trans	&trans	&trans	&trans	&trans
&trans	&trans	&trans	&trans	&trans	&trans	&trans	&trans		&trans	&trans	&trans	&trans	&trans	&trans	&trans
&trans	&trans	&trans	&trans	&trans	&trans	&trans	&trans		&trans	&trans	&trans	&trans	&trans	&trans	&trans
                     >;
              };
              adjust_layer {

//			KP_MULTIPLY	LPAR	RPAR	KP_PLUS	TRANS				TRANS	TRANS	TRANS	TRANS	TRANS	TRANS
//		KP_N7	KP_N8	KP_N9		TRANS	TRANS				TRANS	TRANS	TRANS	TRANS	TRANS	TRANS
//		KP_N4	KP_N5	KP_N6	COLON	ENTER	TRANS				TRANS	TRANS	TRANS	TRANS	TRANS	TRANS
//		KP_N1	KP_N2	KP_N3	KP_DIVIDE	LEFT_BRACKET	TRANS	RIGHT_BRACKET		TRANS	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS
//	TRANS	TRANS	KP_N0	KP_DOT	TRANS	TRANS	TRANS	TRANS		TRANS	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS

                     label = "NumPad";
                     bindings = <
&none	&none	&kp KP_MULTIPLY	&kp LPAR	&kp RPAR	&kp KP_PLUS	&trans				&trans	&trans	&trans	&trans	&trans	&trans
&none	&kp KP_N7	&kp KP_N8	&kp KP_N9	&none	&trans	&trans				&trans	&trans	&trans	&trans	&trans	&trans
&none	&kp KP_N4	&kp KP_N5	&kp KP_N6	&kp COLON	&kp ENTER	&trans				&trans	&trans	&trans	&trans	&trans	&trans
&none	&kp KP_N1	&kp KP_N2	&kp KP_N3	&kp KP_DIVIDE	&kp LEFT_BRACKET	&trans	&kp RIGHT_BRACKET		&trans	&trans	&trans	&trans	&trans	&trans	&trans
&trans	&trans	&kp KP_N0	&kp KP_DOT	&trans	&trans	&trans	&trans		&trans	&trans	&trans	&trans	&trans	&trans	&trans
                     >;
              };
       };
};