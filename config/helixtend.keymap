/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/* balex version 
v1.4 add language change key instead of square bracket and move square brackets to NUMPAD layers 
v1.5 put arrows on the main layer and adjust the rest accordingly
v1.7.1 remove mod-top on C and V
*/

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/rgb.h>
 #include <dt-bindings/zmk/ext_power.h>
 #include <dt-bindings/zmk/outputs.h>

 #define DEFAULT 0
 #define LOWER  1
 #define RAISE  2
 #define ADJUST 3

#define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer


/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
    };


       keymap {
              compatible = "zmk,keymap";
              default_layer {

//	ESC	N1	N2	N3	N4	N5				N6	N7	N8	N9	N0	MINUS
//	TAB	Q	W	E	R	T				Y	U	I	O	P	EQUAL
//	CAPS	A	S	D	F	G				H	J	K	L	SEMICOLON	APOSTROPHE
//	LSHFT	Z	X	C	V	B	LA(LSHFT)		LEFT_BRACKET	N	M	COMMA	DOT	SLASH	RSHFT
//	LCTRL	LWIN	mo_tog 3 3	LALT	mo_tog 2 2	ENTER	BACKSPACE		DEL	SPACE	mo 1	LEFT	UP	DOWN	RIGHT

                     label = "Qwerty";
                     bindings = <
&kp ESC	&kp N1	&kp N2	&kp N3	&kp N4	&kp N5				&kp N6	&kp N7	&kp N8	&kp N9	&kp N0	&kp MINUS
&kp TAB	&kp Q	&kp W	&kp E	&kp R	&kp T				&kp Y	&kp U	&kp I	&kp O	&kp P	&kp EQUAL
&kp CAPS	&kp A	&kp S	&kp D	&kp F	&kp G				&kp H	&kp J	&kp K	&kp L	&kp SEMICOLON	&kp APOSTROPHE
&kp LSHFT	&kp Z	&kp X	&kp C	&kp V	&kp B	&kp LA(LSHFT)		&kp LEFT_BRACKET	&kp N	&kp M	&kp COMMA	&kp DOT	&kp SLASH	&kp RSHFT
&kp LCTRL	&kp LWIN	&mo_tog 3 3	&kp LALT	&mo_tog 2 2	&kp ENTER	&kp BACKSPACE		&kp DEL	&kp SPACE	&mo 1	&kp LEFT	&kp UP	&kp DOWN	&kp RIGHT
                     >;
              };

              lower_layer {

//	TRANS	F1	F2	F3	F4	F5				F6	F7	F8	F9	F10	TRANS
//	TRANS	F11	F12											C_PLAY_PAUSE	TRANS
//	TRANS	BT_SEL 0	BT_SEL 1	BT_SEL 2	BT_SEL 3							C_VOL_UP			TRANS
//	TRANS	BT_CLR	PSCRN	LC(C)  LC(V)					C_PREV	C_VOL_DN	C_NEXT	TRANS	TRANS
//	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS		TRANS	TRANS	TRANS	BACKSLASH	TRANS	TRANS	TRANS

                     label = "Func";
                     bindings = <
&trans	&kp F1	&kp F2	&kp F3	&kp F4	&kp F5				&kp F6	&kp F7	&kp F8	&kp F9	&kp F10	&trans
&trans	&kp F11	&kp F12	&none	&none	&none				&none	&none	&none	&none	&kp C_PLAY_PAUSE	&trans
&trans	&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&none				&none	&none	&kp C_VOL_UP	&none	&none	&trans
&trans	&bt BT_CLR	&kp PSCRN     &kp LC(C)	&kp LC(V)	&none	&none		&none	&none	&kp C_PREV	&kp C_VOL_DN	&kp C_NEXT	&trans	&trans
&trans	&trans	&trans	&trans	&trans	&trans	&trans		&trans	&trans	&trans	&kp BACKSLASH	&trans	&trans	&trans
                     >;
              };
              raise_layer {

//	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS					INS	HOME	PG_UP		TRANS
//	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS					DEL	END	PG_DN		TRANS
//	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS						UP			TRANS
//	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS		TRANS	TRANS	LEFT	DOWN	RIGHT	RCTRL	TRANS
//	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS		TRANS	TRANS		TRANS	TRANS	TRANS	TRANS

                    label = "Navi";
                     bindings = <
&trans	&trans	&trans	&trans	&trans	&trans				&none	&kp INS	&kp HOME	&kp PG_UP	&none	&trans
&trans	&trans	&trans	&trans	&trans	&trans				&none	&kp DEL	&kp END	&kp PG_DN	&none	&trans
&trans	&trans	&trans	&trans	&trans	&trans				&none	&none	&kp UP	&none	&none	&trans
&trans	&trans	&trans	&trans	&trans	&trans	&trans		&trans	&trans	&kp LEFT	&kp DOWN	&kp RIGHT	&kp RCTRL	&trans
&trans	&trans	&trans	&trans	&trans	&trans	&trans		&trans	&trans	&none	&trans	&trans	&trans	&trans
                     >;
              };
              adjust_layer {

//	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS					GRAVE	KP_MULTIPLY	LPAR	RPAR	TRANS
//	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS					KP_N7	KP_N8	KP_N9		KP_PLUS
//	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS					KP_N4	KP_N5	KP_N6	COLON	ENTER
//	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS		LEFT_BRACKET	RIGHT_BRACKET	KP_N1	KP_N2	KP_N3	KP_DIVIDE	TRANS
//	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS	TRANS		TRANS	KP_N0	KP_DOT	TRANS	TRANS	TRANS	TRANS

                     label = "NumPad";
                     bindings = <
&trans	&trans	&trans	&trans	&trans	&trans				&none	&kp GRAVE	&kp KP_MULTIPLY	&kp LPAR	&kp RPAR	&trans
&trans	&trans	&trans	&trans	&trans	&trans				&none	&kp KP_N7	&kp KP_N8	&kp KP_N9	&none	&kp KP_PLUS
&trans	&trans	&trans	&trans	&trans	&trans				&none	&kp KP_N4	&kp KP_N5	&kp KP_N6	&kp COLON	&kp ENTER
&trans	&trans	&trans	&trans	&trans	&trans	&trans		&kp LEFT_BRACKET	&kp RIGHT_BRACKET	&kp KP_N1	&kp KP_N2	&kp KP_N3	&kp KP_DIVIDE	&trans
&trans	&trans	&trans	&trans	&trans	&trans	&trans		&trans	&kp KP_N0	&kp KP_DOT	&trans	&trans	&trans	&trans
                     >;
              };
       };
};